

// User profile and biometric data
export interface UserProfile {
  id?: string;
  name: string;
  email: string;
  gender: "male" | "female" | "other";
  dateOfBirth: string;
  heightCm: number;
  weightKg: number;
  bodyFatPct?: number;
  restingHR?: number;
  activityLevel: ActivityLevel;
  goals: string;
  injuryHistory?: string;
  // Added preferences
  preferences?: {
    daysPerWeek: number;
    workoutLength: number; // in minutes
    preferredExercises: string[];
    excludedExercises: string[];
    preferredEquipment: string[];
  };
  // Added progress tracking
  progressTracking?: {
    completedWorkouts: number;
    totalWorkoutMinutes: number;
    estimatedCaloriesBurned: number;
    lastWorkoutDate?: string;
  };
}

export enum ActivityLevel {
  Sedentary = "Sedentary",
  LightlyActive = "Lightly Active",
  ModeratelyActive = "Moderately Active",
  VeryActive = "Very Active",
  ExtremelyActive = "Extremely Active"
}

// Workout plan generated by AI
export interface WorkoutPlan {
  id?: string;
  userId?: string;
  generatedOn: string;
  name: string;
  weeks: Week[];
}

export interface Week {
  weekNumber: number;
  days: Day[];
}

export interface Day {
  dayNumber: number;
  name: string; // e.g., "Monday", "Rest Day"
  exercises: WorkoutExercise[];
}

export interface WorkoutExercise {
  exerciseId: string;
  name: string;
  muscleGroup: string;
  sets: number;
  reps: number;
  weightOrIntensity?: string;
  restSeconds: number;
  notes?: string;
}

// Exercise database
export interface Exercise {
  id: string;
  name: string;
  muscleGroup: string;
  equipmentNeeded: string[];
  description: string;
  demoVideoUrl?: string;
  imageUrl?: string;
}

// Workout progress tracking
export interface WorkoutProgress {
  id: string;
  userId?: string;
  workoutPlanId: string;
  date: string;
  completedExercises: CompletedExercise[];
  duration: number; // in minutes
  calories: number;
  notes?: string;
}

export interface CompletedExercise {
  exerciseId: string;
  name: string;
  sets: CompletedSet[];
}

export interface CompletedSet {
  reps: number;
  weight?: number;
  completed: boolean;
}

